{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "IconBase.svelte",
    "App.svelte",
    "Button.svelte",
    "Cell.svelte",
    "Controls.svelte",
    "GridCanvas.svelte",
    "GridContainer.svelte",
    "GridDOM.svelte",
    "Profiler.svelte"
  ],
  "sourcesContent": [
    "<script>export let title = null;\nexport let viewBox;\n</script>\n\n<style>\n  svg {\n    stroke: currentColor;\n    fill: currentColor;\n    stroke-width: 0;\n    width: 100%;\n    height: auto;\n    max-height: 100%;\n  }</style>\n\n<svg xmlns=\"http://www.w3.org/2000/svg\" {viewBox}>\n  {#if title}\n    <title>{title}</title>\n  {/if}\n  <slot />\n</svg>\n",
    "<script lang=\"ts\">import { createGrid, createRandomGrid } from \"./lib/utils\";\nimport { nextState } from \"./lib/game\";\nimport { SIZES } from \"./lib/config\";\nimport Profiler from \"./components/Profiler.svelte\";\nimport Controls from \"./components/Controls.svelte\";\nimport GridCanvas from \"./components/GridCanvas.svelte\";\nimport GridDOM from \"./components/GridDOM.svelte\";\nexport let gridSize = 0;\nlet isPlaying = false;\nlet rafId;\nlet frames = 0;\nlet startedPlayingAt;\nlet renderMode = \"dom\";\n$: gridLength = SIZES[gridSize].grid;\n$: grid = createRandomGrid(gridLength);\n$: GridComponent = renderMode === \"canvas\" ? GridCanvas : GridDOM;\nconst actions = {\n    reset() {\n        grid = createGrid(gridLength);\n    },\n    random() {\n        grid = createRandomGrid(gridLength);\n    },\n    next() {\n        grid = nextState(grid);\n    },\n    play() {\n        actions.next();\n        if (isPlaying) {\n            frames++;\n            rafId = requestAnimationFrame(actions.play);\n        }\n    },\n    incrementGridSize() {\n        if (gridSize < SIZES.length - 1) {\n            gridSize++;\n        }\n    },\n    decrementGridSize() {\n        if (gridSize > 0) {\n            gridSize--;\n        }\n    },\n    toggleAutoPlay() {\n        if (isPlaying) {\n            cancelAnimationFrame(rafId);\n            isPlaying = false;\n            frames = 0;\n            startedPlayingAt = undefined;\n            return;\n        }\n        isPlaying = true;\n        startedPlayingAt = Date.now();\n        actions.play();\n    },\n    toggleRenderMode() {\n        renderMode = renderMode === \"canvas\" ? \"dom\" : \"canvas\";\n    },\n};\n</script>\n\n<style>\n  :root {\n    font-size: 16px;\n  }\n\n  main {\n    text-align: center;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    background-color: #3a3f4a;\n    height: 100vh;\n    padding: 2rem 0;\n  }\n\n  h1 {\n    color: white;\n  }</style>\n\n<main>\n  <h1>Svelte Game of Life</h1>\n  <Controls {actions} bind:isPlaying bind:renderMode bind:gridSize />\n  <svelte:component this={GridComponent} sizeIndex={gridSize} {grid} />\n  <Profiler {frames} {startedPlayingAt} />\n</main>\n",
    "<script lang=\"ts\">import { opacify, lighten } from \"polished\";\nexport let label;\nexport let bg = \"#333\";\nexport let disabled;\nexport let buttonSize = \"3.75rem\";\nexport let radius = \"rd\";\n$: background = lighten(0.05, bg);\n$: borderColor = opacify(-0.6, bg);\n$: buttonRadius = (() => {\n    switch (radius) {\n        case \"rd\":\n            return \"50%\";\n        case \"sm\":\n            return \".5rem\";\n        case \"md\":\n            return \".75rem\";\n        case \"lg\":\n            return \"1rem\";\n    }\n})();\n</script>\n\n<style>\n  :root {\n    --button-radius: 50%;\n  }\n\n  button {\n    color: white;\n    background-color: var(--color);\n    border: none;\n    width: var(--button-size);\n    height: var(--button-size);\n    border-radius: var(--button-radius);\n    outline: none;\n    transition: all 0.15s ease-in;\n    cursor: pointer;\n    padding: 0.25rem;\n  }\n\n  button:hover {\n    box-shadow: 0 0 0 4px var(--border-color);\n    border-width: 2px;\n  }\n\n  button:focus {\n    box-shadow: 0 0 0 4px var(--border-color);\n    font-weight: 600;\n  }\n\n  button:disabled {\n    background-color: var(--border-color);\n    box-shadow: none;\n    cursor: not-allowed;\n  }</style>\n\n<button\n  on:click\n  {disabled}\n  style=\"--color:{background};--border-color:{borderColor};--button-size:{buttonSize};--button-radius:{buttonRadius}\"\n  aria-label={label}>\n  <slot>{label}</slot>\n</button>\n",
    "<script lang=\"ts\">import { DEAD_CELL_COLOR, SIZES } from \"lib/config\";\nexport let isAlive = false;\nexport let bg = DEAD_CELL_COLOR;\nexport let sizeIndex = 0;\n$: cellSize = SIZES[sizeIndex].cell;\n</script>\n\n<style>\n  :root {\n    --cell-size: 0.25rem;\n  }\n  div {\n    width: var(--cell-size);\n    height: var(--cell-size);\n    background-color: var(--bg);\n    transition: background-color 0.1s ease-out;\n    border-radius: 50%;\n    margin: 1px;\n  }\n\n  div:hover {\n    cursor: pointer;\n  }\n\n  .alive {\n    background-color: var(--bg);\n  }</style>\n\n<div\n  class:alive={isAlive}\n  style=\"--bg:{bg};--cell-size:{cellSize}\"\n  on:mouseover\n  on:mousedown />\n",
    "<script lang=\"ts\">import FaSync from \"svelte-icons/fa/FaSync.svelte\";\nimport FaRandom from \"svelte-icons/fa/FaRandom.svelte\";\nimport FaPlay from \"svelte-icons/fa/FaPlay.svelte\";\nimport FaPause from \"svelte-icons/fa/FaPause.svelte\";\nimport FaStepForward from \"svelte-icons/fa/FaStepForward.svelte\";\nimport FaMinus from \"svelte-icons/fa/FaMinus.svelte\";\nimport FaPlus from \"svelte-icons/fa/FaPlus.svelte\";\nimport { SIZES } from \"lib/config\";\nimport Button from \"./Button.svelte\";\nconst NO_OP = () => { };\nexport let isPlaying = false;\nexport let gridSize = 0;\nexport let renderMode = \"dom\";\nexport let actions = {\n    reset: NO_OP,\n    random: NO_OP,\n    next: NO_OP,\n    toggleAutoPlay: NO_OP,\n    incrementGridSize: NO_OP,\n    decrementGridSize: NO_OP,\n    toggleRenderMode: NO_OP,\n};\nlet buttonSize = \"2rem\";\n</script>\n\n<style>\n  .controls {\n    margin-top: 1rem;\n    margin-bottom: 1rem;\n    display: flex;\n    justify-content: space-between;\n    width: 20rem;\n  }\n\n  .control-icon {\n    height: 1rem;\n  }\n\n  .size-selector {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 0.75rem 1rem;\n    border-radius: 0.75rem;\n    background-color: rgba(50, 50, 50, 0.6);\n  }\n\n  .range {\n    -webkit-appearance: none;\n       -moz-appearance: none;\n            appearance: none;\n    cursor: pointer;\n    border-radius: 0.75rem;\n    height: 0.25rem;\n    outline: none;\n    margin: 0 0.5rem;\n    transition: all 0.15s ease-in;\n    background-color: rgba(255, 255, 255, 0.8);\n  }\n\n  .range:focus {\n    box-shadow: 0 0 0 2px rgba(255, 255, 255, 0.4);\n  }\n\n  .range:disabled {\n    cursor: not-allowed;\n    background-color: rgba(255, 255, 255, 0.4);\n  }\n\n  .grid-render-controls {\n    display: flex;\n    width: 310px;\n    justify-content: space-between;\n  }</style>\n\n<div class=\"controls\">\n  <Button bg=\"darkslateblue\" label=\"reset\" on:click={actions.reset}>\n    <div class=\"control-icon\">\n      <FaSync />\n    </div>\n  </Button>\n  <Button bg=\"darkslategray\" label=\"random\" on:click={actions.random}>\n    <div class=\"control-icon\">\n      <FaRandom />\n    </div>\n  </Button>\n  <Button bg=\"teal\" disabled={isPlaying} label=\"next\" on:click={actions.next}>\n    <div class=\"control-icon\">\n      <FaStepForward />\n    </div>\n  </Button>\n  <Button\n    bg={isPlaying ? 'darkred' : 'darkgreen'}\n    label={isPlaying ? 'pause' : 'play'}\n    on:click={actions.toggleAutoPlay}>\n    <div class=\"control-icon\">\n      <svelte:component this={isPlaying ? FaPause : FaPlay} />\n    </div>\n  </Button>\n</div>\n<div class=\"grid-render-controls\">\n  <label class=\"size-selector\" for=\"grid-size\">\n    <Button\n      {buttonSize}\n      disabled={isPlaying || gridSize < 1}\n      bg=\"#555\"\n      on:click={actions.decrementGridSize}\n      label=\"decrease grid size\">\n      <div class=\"control-icon\">\n        <FaMinus style=\"transform:scale(1.5)\" />\n      </div>\n    </Button>\n    <input\n      class=\"range\"\n      type=\"range\"\n      name=\"grid-size\"\n      bind:value={gridSize}\n      min={0}\n      max={SIZES.length - 1}\n      step={1}\n      disabled={isPlaying}\n      aria-disabled={String(isPlaying)} />\n    <Button\n      {buttonSize}\n      disabled={isPlaying || gridSize >= SIZES.length - 1}\n      bg=\"#555\"\n      on:click={actions.incrementGridSize}\n      label=\"increase grid size\">\n      <div class=\"control-icon\">\n        <FaPlus />\n      </div>\n    </Button>\n  </label>\n  <div>\n    <Button\n      radius=\"md\"\n      label=\"render mode\"\n      on:click={actions.toggleRenderMode}\n      bg={renderMode === 'canvas' ? 'darkgreen' : 'darkred'}>\n      {renderMode}\n    </Button>\n  </div>\n</div>\n",
    "<script lang=\"ts\">import { onMount } from \"svelte\";\nimport { DEAD_CELL_COLOR, SIZES } from \"lib/config\";\n;\nimport { getRainbowHSL } from \"lib/colors\";\nexport let grid = [];\nexport let sizeIndex = 0;\nlet canvas;\nlet ctx;\n$: cellSizeStr = SIZES[sizeIndex].cell;\n$: gridSize = SIZES[sizeIndex].grid;\n$: cellSize = Number(cellSizeStr.replace(\"rem\", \"\")) * 16;\n$: if (ctx && grid) {\n    draw(ctx, grid);\n}\n$: cellRadius = cellSize / 2;\nconst offset = (n) => n * (cellSize + 2) + cellRadius + 1;\nfunction draw(ctx, grid) {\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    grid.forEach((row, y) => {\n        row.forEach((isAlive, x) => {\n            const cellColor = isAlive\n                ? getRainbowHSL(y, x, gridSize)\n                : DEAD_CELL_COLOR;\n            ctx.fillStyle = cellColor;\n            ctx.beginPath();\n            ctx.arc(offset(x), offset(y), cellRadius, 0, 2 * Math.PI, false);\n            ctx.fill();\n        });\n    });\n}\n$: if (canvas && gridSize && cellSize) {\n    const length = gridSize * (cellSize + 2);\n    if (length && length !== canvas.height) {\n        canvas.height = length;\n        canvas.width = length;\n        draw(ctx, grid);\n    }\n}\nonMount(() => {\n    ctx = canvas.getContext(\"2d\");\n});\n</script>\n\n<style>\n  canvas {\n    border: solid 0.25rem #222;\n    border-radius: 0.75rem;\n    padding: 0.125rem;\n    margin: 1.75rem auto;\n  }</style>\n\n<canvas bind:this={canvas} />\n",
    "<style>\n  .grid-container {\n    border: solid 0.25rem #222;\n    border-radius: 0.75rem;\n    padding: 0.125rem;\n    margin: 1.75rem auto;\n  }</style>\n\n<div class=\"grid-container\">\n  <slot />\n</div>\n",
    "<script lang=\"ts\">import { getRainbowHSL } from \"lib/colors\";\n;\nimport { DEAD_CELL_COLOR, SIZES } from \"lib/config\";\nimport Cell from \"./Cell.svelte\";\nimport GridContainer from \"./GridContainer.svelte\";\nexport let grid = [];\nexport let sizeIndex = 0;\n$: gridSize = SIZES[sizeIndex].grid;\nconst handleMouseEvent = ({ y, x }) => (e) => {\n    if (e.button === 0 && e.buttons === 1) {\n        grid[y][x] = !grid[y][x];\n    }\n};\n</script>\n\n<style>\n  .row {\n    flex: 1;\n    display: flex;\n  }</style>\n\n<GridContainer>\n  {#each grid as cells, y}\n    <div class=\"row\">\n      {#each cells as isAlive, x}\n        <Cell\n          {sizeIndex}\n          {isAlive}\n          on:mouseover={handleMouseEvent({ y, x })}\n          on:mousedown={handleMouseEvent({ y, x })}\n          bg={isAlive ? getRainbowHSL(y, x, gridSize) : DEAD_CELL_COLOR} />\n      {/each}\n    </div>\n  {/each}\n</GridContainer>\n",
    "<script lang=\"ts\">import { calculateFrameRate } from \"lib/utils\";\nexport let frames = 0;\nexport let startedPlayingAt = Date.now();\n$: frameRate = calculateFrameRate(frames, startedPlayingAt, Date.now());\n$: color =\n    frameRate < 24 ? \"crimson\" : frameRate < 48 ? \"orange\" : \"darkgreen\";\n$: opacity = Number(Boolean(frameRate && !isNaN(frameRate)));\n</script>\n\n<style>\n  div {\n    margin: 1em;\n    background: var(--color);\n    border-radius: 1rem;\n    color: white;\n    width: 4em;\n    text-align: center;\n    transition: background 0.3s ease-in;\n    height: 2.125em;\n    width: 4.25em;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-weight: 700;\n    text-shadow: 0.1em 0.1em 0.1em #333;\n    opacity: var(--opacity);\n  }</style>\n\n<div style=\"--color:{color};--opacity:{opacity}\">{frameRate}fps</div>\n"
  ],
  "names": [],
  "mappings": "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"
}